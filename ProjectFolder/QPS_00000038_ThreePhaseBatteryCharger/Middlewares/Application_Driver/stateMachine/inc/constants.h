/*
 * constants.h
 *
 *  Created on: Aug 20, 2022
 *      Author: vishweshgm
 */

#ifndef APPLICATION_DRIVER_STATEMACHINE_INC_CONSTANTS_H_
#define APPLICATION_DRIVER_STATEMACHINE_INC_CONSTANTS_H_

/*DONOT FORGET TO ERASE EEP ONCE AFTER FLASH*/
#define DGUS_DISPLAY					 				1
#define GRAPHIC_DISPLAY									0

#if(DGUS_DISPLAY == 1)
#define DGUS_TRANSFER_BUFFER_SIZE						64
#define DGUS_RECEIVE_BUFFER_SIZE						64

/*PAGE IDs*/
#define DGUS_PAGEID_SPLASHSCREEN1						0
#define DGUS_PAGEID_SPLASHSCREEN2						1
#define DGUS_PAGEID_MAINMENU							2
#define DGUS_PAGEID_CURRENTMODESETTINGS					3
#define DGUS_PAGEID_DATADUMP							4
#define DGUS_PAGEID_SELFTEST							5
#define DGUS_PAGEID_CCRUNNING							6
#define DGUS_PAGEID_CCPAUSED         					7
#define DGUS_PAGEID_SETTINGS							8
#define DGUS_PAGEID_SETTINGDATATRANSFER					9
#define DGUS_PAGEID_SETTIGNDATAOPERATIONON				10
#define DGUS_PAGEID_SETTINGERASE						11
#define DGUS_PAGEID_VOLTAGEMODESETTINGS					12
#define DGUS_PAGEID_CVPAUSED							13
#define DGUS_PAGEID_CVRUNNING							14
#define DGUS_PAGEID_RESUMINGFROMLASTPOINT				15
#define DGUS_PAGEID_POWERFAILURE						16
#define DGUS_PAGEID_DEBUGPARAMS							17
#define DGUS_PAGEID_VISHWAMODE							18
#define DGUS_PAGEID_CCPREPARING							19
#define DGUS_PAGEID_CVPREPARING							20
//#define DGUS_PAGEID_MAINMENU							0x15
//#define DGUS_PAGEID_MAINMENU							0x16
//#define DGUS_PAGEID_MAINMENU							0x17
//#define DGUS_PAGEID_MAINMENU							0x18
//#define DGUS_PAGEID_MAINMENU							0x19
//#define DGUS_PAGEID_MAINMENU							0x1A
//#define DGUS_PAGEID_MAINMENU							0x1B
//#define DGUS_PAGEID_MAINMENU							0x1C
//#define DGUS_PAGEID_MAINMENU							0x1D
//#define DGUS_PAGEID_MAINMENU							0x1E
//#define DGUS_PAGEID_MAINMENU							0x1F
/*Command List*/
#define DGUS_TOTAL_NUM_OF_COMMANDS						8
#define DGUS_COMMAND_INIT								{\
															/*00,  0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A. 0x1B, 0x1C, 0x1D, 0x1E, 0x1F, 0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x2E, 0x2F, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F*/\
		/*0. writePaeID*/									{0x5A, 0xA5, 0x07, 0x82, 0x00, 0x84, 0x5A, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},\
		/*1. Read Variables*/								{0x5A, 0xA5, 0x04, 0x83, 0x10, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},\
		/*2. ReadPageID*/									{0x5A, 0xA5, 0x04, 0x83, 0x00, 0x14, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},\
		/*3. Reset*/										{0x5A, 0xA5, 0x07, 0x82, 0x00, 0x04, 0x55, 0xAA, 0x5A, 0xA5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},\
		/*4. WriteVariables*/								{0x5A, 0xA5, 0x0D, 0x82, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},\
		/*5. Text Display*/									{0x5A, 0xA5, 0x0D, 0x82, 0x10, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},\
		/*6. Writefloatvariables*/							{0x5A, 0xA5, 0x04, 0x82, 0x10, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},\
		/*7. Start animation icon*/							{0x5A, 0xA5, 0x05, 0x82, 0x14, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}\
														}
#endif
#define ALACRITAS_UNIT_NUMBER							(3)
#define UNDERVOLTAGE_ADMIN_VALUE						48.0
#define OVERVOLTAGE_ADMIN_VALUE							250.0
#define OVERCURRENT_ADMIN_VALUE							80.0
#define INC(x,max,inc) 									x = (x<=(max - inc))?(x+inc):max
#define DEC(x,min,dec) 									x = (x>=(min + dec))?(x-dec):min


#define REDLEDON()
#define GREENLEDON()
#define ORANGELEDON()
#define BLUELEDON()

#define REDLEDOFF()
#define GREENLEDOFF()
#define ORANGELEDOFF()
#define BLUELEDOFF()

#define DC_CONTACTOR_STATE()							HAL_GPIO_ReadPin(uC_TransistorSwitch6_GPIO_Port, uC_TransistorSwitch6_Pin)
#define CAPCONTACTOR_STATE()							HAL_GPIO_ReadPin(uC_TransistorSwitch4_GPIO_Port, uC_TransistorSwitch4_Pin)

#define FILTERBANK_CONNECTSTATE()						HAL_GPIO_ReadPin(uC_CapBank_GPIO_Port, uC_CapBank_Pin)


#define BATTERY_RELAY_ON()								HAL_GPIO_WritePin(uC_Relay_GPIO_Port,uC_Relay_Pin,GPIO_PIN_SET)
#define BATTERY_RELAY_OFF()								HAL_GPIO_WritePin(uC_Relay_GPIO_Port,uC_Relay_Pin,GPIO_PIN_RESET)

#define DC_CONTACTOR_ON() 								HAL_GPIO_WritePin(uC_TransistorSwitch6_GPIO_Port,uC_TransistorSwitch6_Pin,GPIO_PIN_RESET)
#define DC_CONTACTOR_OFF() 								HAL_GPIO_WritePin(uC_TransistorSwitch6_GPIO_Port,uC_TransistorSwitch6_Pin,GPIO_PIN_SET)


#define CAPCONTACTOR_ON() 								HAL_GPIO_WritePin(uC_TransistorSwitch4_GPIO_Port,uC_TransistorSwitch4_Pin,GPIO_PIN_RESET)
#define CAPCONTACTOR_OFF() 								HAL_GPIO_WritePin(uC_TransistorSwitch4_GPIO_Port,uC_TransistorSwitch4_Pin,GPIO_PIN_SET)

#define BUZZER_ON()										HAL_GPIO_WritePin(uC_Buzzer_GPIO_Port,uC_Buzzer_Pin,GPIO_PIN_SET)
#define BUZZER_OFF()									HAL_GPIO_WritePin(uC_Buzzer_GPIO_Port,uC_Buzzer_Pin,GPIO_PIN_RESET)


#define G1T_ON()										HAL_GPIO_WritePin(uC_G1T_GPIO_Port,uC_G1T_Pin,GPIO_PIN_RESET);
#define G2T_ON()										HAL_GPIO_WritePin(uC_G2T_GPIO_Port,uC_G2T_Pin,GPIO_PIN_RESET);
#define G3T_ON()										HAL_GPIO_WritePin(uC_G3T_GPIO_Port,uC_G3T_Pin,GPIO_PIN_RESET);

#define G1T_OFF()										HAL_GPIO_WritePin(uC_G1T_GPIO_Port,uC_G1T_Pin,GPIO_PIN_SET);
#define G2T_OFF()										HAL_GPIO_WritePin(uC_G2T_GPIO_Port,uC_G2T_Pin,GPIO_PIN_SET);
#define G3T_OFF()										HAL_GPIO_WritePin(uC_G3T_GPIO_Port,uC_G3T_Pin,GPIO_PIN_SET);

#define ONBOARDLED_TOGGLE()								HAL_GPIO_TogglePin(uC_LedOnBoard_GPIO_Port,uC_LedOnBoard_Pin)

#define ALL_INDICATORS_ON()								do{\
														BUZZER_ON();\
														REDLEDON();\
														GREENLEDON();\
														ORANGELEDON();\
														BLUELEDON();\
														}while(0)

#define ALL_INDICATORS_OFF()							do{\
														BUZZER_OFF();\
														REDLEDOFF();\
														GREENLEDOFF();\
														ORANGELEDOFF();\
														BLUELEDOFF();\
														}while(0)

#define MAP_SM(idx,mode) 								do{\
														if(Appl_Display.SelectedIndexIntheList == idx){ SM_enumECUState = mode; }\
														}while(0);

#define SENDTEXT()										do{\
															if(HAL_OK != HAL_UART_Transmit(&huart3, &uartDgusTxBuffer[0], (3+uartDgusTxBuffer[2]), 10)){\
																return DGUS_ERR;\
														}\
														}while(0)

#define TRIGGER_ANGLE_MIN									(150)
#define TRIGGER_ANGLE_MAX									(180)
#define SOFT_START_ANGLE									(140)



#define MOVING_AVERAGE_SIZE_VOLTAGE							100
#define MOVING_AVERAGE_SIZE_HallCURRENT						10
#define MOVING_AVERAGE_SIZE_ShuntCURRENT					10

#define SCR_ANGLE_TRIGGER_MIN 								50.0
#define SCR_ANGLE_TRIGGER_MAX 								200.0

#define PID_CURRENT_MIN										0
#define PID_CURRENT_MAX										150
#define PID_VOLTAGE_MIN										0
#define PID_VOLTAGE_MAX										150


#define U32_MAX												(4294967295)

#define SCR_TIMER_TICKS_FOR_1US								1
#define SCR_TIMER3_TICKS_FOR_1US							1
#define TIMER3_TICKSTO_TIMER5TICKS							1


#define TASK_SM_REPEAT_MS        							10
#define COUNT_1SEC_TASK_SM    								(1000/TASK_SM_REPEAT_MS)
#define COUNT_5SEC_TASK_SM    								(5000/TASK_SM_REPEAT_MS)




#define NUM_OF_BYTES_IN_A_EXTEEP_RECORD						32
#define NUM_OF_ATMEL_RECORDS_IN_A_PAGE						(ATMEL_EEP_CHIP_PAGE_SIZE/NUM_OF_BYTES_IN_A_EXTEEP_RECORD)
#define START_RECORD_FLAG									1
#define STOP_RECORD_FLAG									0
#define ATMEL_EEP_CHIP_PAGE_SIZE							256

#define PAGEINCREMENT_OFFSET_THRESHOLD						(ATMEL_EEP_CHIP_PAGE_SIZE-NUM_OF_BYTES_IN_A_EXTEEP_RECORD)

/*Mode select numbers for eep save*/
#define CC_MODE												0
#define CV_MODE												1

#define INITIAL_CCSLOW_GAIN									(1.0e-5)
#define INITIAL_CCFAST_GAIN									(1.0e-5)
#define INITIAL_CVSLOW_GAIN									(1.0e-5)
#define INITIAL_CVFAST_GAIN									(1.0e-5)

#define MOVING_AVERAGE_SIZE_vArray							50
#define MOVING_AVERAGE_SIZE_iArray							20

#endif /* APPLICATION_DRIVER_STATEMACHINE_INC_CONSTANTS_H_ */
